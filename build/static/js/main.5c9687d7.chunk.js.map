{"version":3,"sources":["reducers/index.js","constants/actionTypes.js","store/configureStore.js","serviceWorker.js","components/catalog-header/catalog-header.jsx","components/catalog-header/index.js","actions/index.js","components/catalog-actions/catalog-actions.jsx","components/catalog-actions/index.js","containers/catalog-actions-container/catalog-actions-container.js","components/catalog-item/catalog-item.jsx","components/catalog-item/index.js","components/catalog-grid/catalog-grid.jsx","components/catalog-grid/index.js","containers/catalog-grid-container/catalog-grid-container.js","components/catalog-form/catalog-form.jsx","components/catalog-form/index.js","containers/catalog-form-container/catalog-form-container.js","components/catalog/catalog.jsx","components/catalog/index.js","App.js","index.js"],"names":["items","data","map","item","index","Object","objectSpread","id","initialState","nextId","Math","max","apply","toConsumableArray","reducers","state","arguments","length","undefined","action","type","console","error","itemToClone","_cloneDeep","concat","cloneLastBeforeFirst","clonedItem","cloneFirstAfterLast","slice","payload","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","Boolean","location","hostname","match","CatalogHeader","props","className","listMode","onListModeSelect","onGridModeSelect","react_default","a","createElement","trim","title","onClick","index_es","icon","faList","faTh","defaultProps","require","removeFirst","removeLast","addNewItem","CatalogActions","arrayIsEmpty","onCloneLastToFirst","onCloneFirstToLast","onRemoveFirst","onRemoveLast","emptyArrayError","disabled","CatalogActionsContainer","catalog_actions","connect","dispatch","_bindActionCreators","bindActionCreators","Actions","catalogItemPropTypes","PropTypes","number","isRequired","string","attributes","arrayOf","description","propsTypes","bool","CatalogGridItem","attribute","key","floor","random","shape","CatalogGrid","catalog_item","assign","CatalogGridContainer","catalog_grid","CatalogForm","handleTitleChange","e","_this","setState","target","value","handleAttributesChange","handleDescriptionChange","handleSubmit","preventDefault","onSubmit","_this$state","split","_this$state2","this","fillsFilled","htmlFor","placeholder","onChange","rows","Component","CatalogFormContainer","onAddNewItem","catalog_form","Catalog","handleGridModeSelect","handleListModeSelect","catalog_actions_container","catalog_header","catalog_grid_container","catalog_form_container","App","catalog","store","middlewares","thunk","createStore","reducer","applyMiddleware","configureStore","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5c9687d7.chunk.js","sourcesContent":["import _cloneDeep from 'lodash/cloneDeep';\n\nimport {\n  CLONE_LAST_BEFORE_FIRST,\n  CLONE_FIRST_AFTER_LAST,\n  REMOVE_FIRST,\n  REMOVE_LAST,\n  ADD_NEW_ITEM\n} from '../constants/actionTypes';\n\nimport { data } from '../data.json';\n\nconst items = data.map((item, index) => ({ ...item, id: index + 1 }));\n\nconst initialState = {\n  items,\n  nextId: Math.max(...items.map(item => item.id)) + 1\n};\n\nexport default (state = initialState, action) => {\n  const cloneLastBeforeFirst = (items, nextId) => {\n    if (!items.length) {\n      console.error('Catalog: can\\'t clone last item, array is empty');\n\n      return {\n        items,\n        nextId\n      };\n    }\n\n    const itemToClone = items[items.length - 1];\n    const clonedItem = {\n      ..._cloneDeep(itemToClone),\n      id: nextId\n    };\n\n    return {\n      items: [clonedItem, ...items],\n      nextId: nextId + 1\n    };\n  };\n\n  const cloneFirstAfterLast = (items, nextId) => {\n    if (!items.length) {\n      console.error('Catalog: can\\'t clone first item, array is empty');\n\n      return {\n        items,\n        nextId\n      };\n    }\n\n    const itemToClone = items[0];\n    const clonedItem = {\n      ..._cloneDeep(itemToClone),\n      id: nextId\n    };\n\n    return {\n      items: [...items, clonedItem],\n      nextId: nextId + 1\n    };\n  };\n\n\n  switch (action.type) {\n    case CLONE_LAST_BEFORE_FIRST:\n      return {\n        ...state,\n        ...cloneLastBeforeFirst(state.items, state.nextId)\n      };\n\n    case CLONE_FIRST_AFTER_LAST:\n      return {\n        ...state,\n        ...cloneFirstAfterLast(state.items, state.nextId)\n      };\n\n    case REMOVE_FIRST:\n      if (!state.items.length) {\n        console.error('Catalog: can\\'t remove first item, array is empty');\n      }\n\n      return {\n        ...state,\n        items: state.items.slice(1)\n      };\n\n    case REMOVE_LAST:\n      if (!state.items.length) {\n        console.error('Catalog: can\\'t remove last item, array is empty');\n      }\n\n      return {\n        ...state,\n        items: state.items.slice(0, -1)\n      };\n\n    case ADD_NEW_ITEM:\n      return {\n        ...state,\n        items: state.items.concat({\n          ...action.payload,\n          id: state.nextId\n        }),\n        nextId: state.nextId + 1\n      };\n\n    default:\n      return state;\n  }\n};\n","export const CLONE_LAST_BEFORE_FIRST = 'CLONE_LAST_BEFORE_FIRST';\nexport const CLONE_FIRST_AFTER_LAST = 'CLONE_FIRST_AFTER_LAST';\nexport const REMOVE_FIRST = 'REMOVE_FIRST';\nexport const REMOVE_LAST = 'REMOVE_LAST';\n\nexport const ADD_NEW_ITEM = 'ADD_NEW_ITEM';\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport logger from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport reducer from '../reducers';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nexport default function configureStore(initialState) {\n  const middlewares = [thunk];\n\n  if (process.env.NODE_ENV === 'development') {\n    middlewares.push(logger);\n  }\n\n  const store = createStore(\n    reducer,\n    initialState,\n    composeEnhancers(\n      applyMiddleware(...middlewares)\n    )\n  );\n\n  return store;\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faList, faTh } from '@fortawesome/free-solid-svg-icons';\n\nconst propTypes = {\n  onListModeSelect: PropTypes.func.isRequired,\n  onGridModeSelect: PropTypes.func.isRequired,\n  className: PropTypes.string,\n  listMode: PropTypes.bool,\n};\n\nconst defaultProps = {\n  className: '',\n  listMode: false\n};\n\nconst CatalogHeader = (props) => {\n  const {\n    className,\n    listMode,\n    onListModeSelect,\n    onGridModeSelect\n  } = props;\n\n  return (\n    <div className={`${className} catalog-header`.trim()}>\n      <h2 className=\"catalog-header__title\">\n        {'Список объектов'}\n      </h2>\n      <div className=\"catalog-header__mods catalog-header-mods\">\n        <button\n          className={`btn ${listMode ? 'btn-primary' : 'btn-secondary'} btn-inline catalog-header-mods__button`}\n          title=\"Переключить в режим списка\"\n          type=\"button\"\n          onClick={onListModeSelect}\n        >\n          <FontAwesomeIcon icon={faList} />\n          <span className=\"visually-hidden\">\n            {'Список'}\n          </span>\n        </button>\n        <button\n          className={`btn ${listMode ? 'btn-secondary' : 'btn-primary'} btn-inline catalog-header-mods__button`}\n          title=\"Переключить в режим сетки из карточек\"\n          type=\"button\"\n          onClick={onGridModeSelect}\n        >\n          <FontAwesomeIcon icon={faTh} />\n          <span className=\"visually-hidden\">\n            {'Карточки'}\n          </span>\n        </button>\n      </div>\n    </div>\n  );\n};\n\nCatalogHeader.propTypes = propTypes;\nCatalogHeader.defaultProps = defaultProps;\nexport default CatalogHeader;\n","export { default } from './catalog-header';\n\nrequire('./catalog-header.scss');\n","import * as types from '../constants/actionTypes';\n\nexport const cloneLastBeforeFirst = () => ({\n  type: types.CLONE_LAST_BEFORE_FIRST\n});\n\nexport const cloneFirstAfterLast = () => ({\n  type: types.CLONE_FIRST_AFTER_LAST\n});\n\nexport const removeFirst = () => ({\n  type: types.REMOVE_FIRST\n});\n\nexport const removeLast = () => ({\n  type: types.REMOVE_LAST\n});\n\nexport const addNewItem = payload => ({\n  type: types.ADD_NEW_ITEM,\n  payload\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst propTypes = {\n  arrayIsEmpty: PropTypes.bool.isRequired,\n  onCloneLastToFirst: PropTypes.func.isRequired,\n  onCloneFirstToLast: PropTypes.func.isRequired,\n  onRemoveFirst: PropTypes.func.isRequired,\n  onRemoveLast: PropTypes.func.isRequired,\n};\n\nconst CatalogActions = (props) => {\n  const {\n    className,\n    arrayIsEmpty,\n    onCloneLastToFirst,\n    onCloneFirstToLast,\n    onRemoveFirst,\n    onRemoveLast\n  } = props;\n\n  const emptyArrayError = 'Действие недоступно для пустого списка. Создайте элемент на форме внизу страницы';\n\n  return (\n    <div className={`${className} catalog-actions`.trim()}>\n      <button\n        className=\"btn btn-primary btn-inline catalog-actions__button\"\n        title={`${arrayIsEmpty\n          ? emptyArrayError\n          : 'Скопировать последний элемент и вставить в начало списка'}\n        `}\n        type=\"button\"\n        disabled={arrayIsEmpty}\n        onClick={onCloneLastToFirst}\n      >\n        {'Добавить в начало'}\n      </button>\n      <button\n        className=\"btn btn-primary btn-inline catalog-actions__button\"\n        title={`${arrayIsEmpty\n          ? emptyArrayError\n          : 'Скопировать первый элемент и вставить в конец списка'\n        }`}\n        type=\"button\"\n        disabled={arrayIsEmpty}\n        onClick={onCloneFirstToLast}\n      >\n        {'Добавить в конец'}\n      </button>\n      <button\n        className=\"btn btn-primary btn-inline catalog-actions__button\"\n        title={`${arrayIsEmpty\n          ? emptyArrayError\n          : 'Удалить первый элемент'\n        }`}\n        type=\"button\"\n        disabled={arrayIsEmpty}\n        onClick={onRemoveFirst}\n      >\n        {'Удалить первый'}\n      </button>\n      <button\n        className=\"btn btn-primary btn-inline catalog-actions__button\"\n        title={`${arrayIsEmpty\n          ? emptyArrayError\n          : 'Удалить последний элемент'\n        }`}\n        type=\"button\"\n        disabled={arrayIsEmpty}\n        onClick={onRemoveLast}\n      >\n        {'Удалить последний'}\n      </button>\n    </div>\n  );\n};\n\nCatalogActions.propTypes = propTypes;\nexport default CatalogActions;\n","export { default } from './catalog-actions';\n\nrequire('./catalog-actions.scss');\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nimport * as Actions from '../../actions';\n\nimport CatalogActions from '../../components/catalog-actions';\n\nconst propTypes = {\n  arrayIsEmpty: PropTypes.bool.isRequired,\n  cloneLastBeforeFirst: PropTypes.func.isRequired,\n  cloneFirstAfterLast: PropTypes.func.isRequired,\n  removeFirst: PropTypes.func.isRequired,\n  removeLast: PropTypes.func.isRequired,\n  className: PropTypes.string\n};\n\nconst defaultProps = {\n  className: ''\n};\n\nconst CatalogActionsContainer = (props) => {\n  const {\n    arrayIsEmpty,\n    cloneLastBeforeFirst,\n    cloneFirstAfterLast,\n    removeFirst,\n    removeLast,\n    className,\n  } = props;\n\n  return (\n    <CatalogActions\n      arrayIsEmpty={arrayIsEmpty}\n      onCloneLastToFirst={cloneLastBeforeFirst}\n      onCloneFirstToLast={cloneFirstAfterLast}\n      onRemoveFirst={removeFirst}\n      onRemoveLast={removeLast}\n      className={className}\n    />\n  );\n};\n\nconst mapStateToProps = state => ({ arrayIsEmpty: !state.items.length });\n\nconst mapDispatchToProps = (dispatch) => {\n  const {\n    cloneLastBeforeFirst,\n    cloneFirstAfterLast,\n    removeFirst,\n    removeLast,\n  } = bindActionCreators(Actions, dispatch);\n\n  return {\n    cloneLastBeforeFirst,\n    cloneFirstAfterLast,\n    removeFirst,\n    removeLast\n  };\n};\n\nCatalogActionsContainer.propTypes = propTypes;\nCatalogActionsContainer.defaultProps = defaultProps;\nexport default connect(mapStateToProps, mapDispatchToProps)(CatalogActionsContainer);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const catalogItemPropTypes = {\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  attributes: PropTypes.arrayOf(\n    PropTypes.string,\n  ).isRequired,\n  description: PropTypes.string.isRequired,\n};\n\nconst propsTypes = {\n  ...catalogItemPropTypes,\n  className: PropTypes.string,\n  listMode: PropTypes.bool,\n};\n\nconst defaultProps = {\n  className: '',\n  listMode: false\n};\n\nconst CatalogGridItem = (props) => {\n  const {\n    id,\n    title,\n    attributes,\n    description,\n    className,\n    listMode\n  } = props;\n\n  return (\n    <div className={\n      `${className} catalog-item\n      ${listMode ? 'catalog-item_list-mode' : ''} `.trim()}\n    >\n      <h3 className={\n        `catalog-item__header catalog-item-header\n        ${listMode ? 'catalog-item-header_list-mode' : ''} `.trim()}\n      >\n        <span className=\"catalog-item-header__title\">\n          {title}\n        </span>\n        <span className=\"catalog-item-header__id\">\n          {id}\n        </span>\n      </h3>\n      <ul className={\n        `catalog-item__attributes catalog-item-attributes\n        ${listMode ? 'catalog-item-attributes_list-mode' : ''}`.trim()}\n      >\n        {attributes.map(attribute => (\n          <li\n            className=\"catalog-item-attributes__attribute\"\n            key={Math.floor(Math.random() * 10e10)}\n          >\n            {attribute}\n          </li>\n        ))}\n      </ul>\n      <p className=\"catalog-item__description\">\n        {description}\n      </p>\n    </div>\n  );\n};\n\nCatalogGridItem.propsTypes = propsTypes;\nCatalogGridItem.defaultProps = defaultProps;\nexport default CatalogGridItem;\n","export { default, catalogItemPropTypes } from './catalog-item';\n\nrequire('./catalog-item.scss');\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport CatalogItem, { catalogItemPropTypes } from '../catalog-item';\n\nexport const catalogItemsPropTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape(\n      catalogItemPropTypes\n    ).isRequired\n  ).isRequired,\n};\n\nconst propTypes = {\n  ...catalogItemsPropTypes,\n  className: PropTypes.string,\n  listMode: PropTypes.bool,\n};\n\nconst defaultProps = {\n  className: '',\n  listMode: false,\n};\n\nconst CatalogGrid = (props) => {\n  const {\n    className,\n    listMode,\n    items\n  } = props;\n\n  return (\n    <div className={`${className} catalog-grid ${listMode ? 'catalog-grid_list-mode' : ''}`.trim()}>\n      {items.map(item => (\n        <div\n          className=\"catalog-grid__item catalog-grid-item\"\n          key={item.id}\n        >\n          <CatalogItem\n            {...item}\n            className=\"catalog-grid-item__content\"\n            listMode={listMode}\n          />\n        </div>\n      ))}\n    </div>\n  );\n};\n\nCatalogGrid.propTypes = propTypes;\nCatalogGrid.defaultProps = defaultProps;\nexport default CatalogGrid;\n","export { default, catalogItemsPropTypes } from './catalog-grid';\n\nrequire('./catalog-grid.scss');\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { connect } from 'react-redux';\n\nimport CatalogGrid, { catalogItemsPropTypes } from '../../components/catalog-grid';\n\nconst propTypes = {\n  ...catalogItemsPropTypes,\n  className: PropTypes.string,\n  listMode: PropTypes.bool\n};\n\nconst defaultProps = {\n  className: '',\n  listMode: false,\n};\n\nconst CatalogGridContainer = (props) => {\n  const {\n    items,\n    listMode,\n    className,\n  } = props;\n\n  return (\n    <CatalogGrid\n      items={items}\n      listMode={listMode}\n      className={className}\n    />\n  );\n};\n\nconst mapStateToProps = state => ({ items: state.items });\n\nCatalogGridContainer.propTypes = propTypes;\nCatalogGridContainer.defaultProps = defaultProps;\nexport default connect(mapStateToProps)(CatalogGridContainer);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nconst propTypes = {\n  onSubmit: PropTypes.func.isRequired\n};\n\nclass CatalogForm extends Component {\n  state = {\n    title: '',\n    attributes: '',\n    description: ''\n  }\n\n  handleTitleChange = (e) => {\n    this.setState({\n      title: e.target.value\n    });\n  }\n\n  handleAttributesChange = (e) => {\n    this.setState({\n      attributes: e.target.value\n    });\n  }\n\n  handleDescriptionChange = (e) => {\n    this.setState({\n      description: e.target.value\n    });\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    const { onSubmit } = this.props;\n\n    const {\n      title,\n      attributes,\n      description\n    } = this.state;\n\n    if (title === '') return;\n\n    onSubmit({\n      title,\n      attributes: attributes.split('\\n'),\n      description\n    });\n\n    this.setState({\n      title: '',\n      attributes: '',\n      description: ''\n    });\n  }\n\n  render() {\n    const {\n      title,\n      attributes,\n      description\n    } = this.state;\n\n    const fillsFilled = title !== '';\n\n    return (\n      <form\n        className=\"catalog-form\"\n        action=\"#\"\n        onSubmit={fillsFilled ? this.handleSubmit : null}\n      >\n        <label\n          className=\"catalog-form__label catalog-form-label\"\n          htmlFor=\"new-item-title-field\"\n        >\n          <span className=\"catalog-form-label__text\">\n            {'Заголовок *'}\n          </span>\n          <input\n            className=\"catalog-form__input catalog-form-label__field\"\n            id=\"new-item-title-field\"\n            type=\"text\"\n            placeholder=\"Заголовок. Обязательное поле\"\n            value={title}\n            onChange={this.handleTitleChange}\n          />\n        </label>\n        <label\n          className=\"catalog-form__label catalog-form-label\"\n          htmlFor=\"new-item-attributes-field\"\n        >\n          <span className=\"catalog-form-label__text\">\n            {'Добавить пункт'}\n          </span>\n          <textarea\n            className=\"catalog-form__text-area catalog-form-label__field\"\n            rows=\"3\"\n            id=\"new-item-attributes-field\"\n            placeholder=\"Атрибуты разделяются переносом строки. Используйте Enter для перечисления нескольких\"\n            value={attributes}\n            onChange={this.handleAttributesChange}\n          />\n        </label>\n        <label\n          className=\"catalog-form__label catalog-form-label\"\n          htmlFor=\"new-item-description-field\"\n        >\n          <span className=\"catalog-form-label__text\">\n            {'Описание'}\n          </span>\n          <input\n            className=\"catalog-form__input catalog-form-label__field\"\n            id=\"new-item-description-field\"\n            type=\"text\"\n            placeholder=\"Описание\"\n            value={description}\n            onChange={this.handleDescriptionChange}\n          />\n        </label>\n        <button\n          className=\"btn btn-primary btn-inline catalog-form__button\"\n          title=\"Добавить новый объект в каталог\"\n          type=\"submit\"\n          disabled={!fillsFilled}\n        >\n          {'Добавить'}\n        </button>\n      </form>\n    );\n  }\n}\n\nCatalogForm.propTypes = propTypes;\nexport default CatalogForm;\n","export { default } from './catalog-form';\n\nrequire('./catalog-form.scss');\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { connect } from 'react-redux';\n\nimport { addNewItem } from '../../actions';\n\nimport CatalogForm from '../../components/catalog-form';\n\nconst propTypes = {\n  onAddNewItem: PropTypes.func.isRequired,\n  className: PropTypes.string\n};\n\nconst defaultProps = {\n  className: ''\n};\n\nconst CatalogFormContainer = (props) => {\n  const {\n    onAddNewItem,\n    className,\n  } = props;\n\n  return (\n    <CatalogForm\n      onSubmit={onAddNewItem}\n      className={className}\n    />\n  );\n};\n\nconst mapDispatchToProps = dispatch => ({\n  onAddNewItem: item => dispatch(addNewItem(item))\n});\n\nCatalogFormContainer.propTypes = propTypes;\nCatalogFormContainer.defaultProps = defaultProps;\nexport default connect(null, mapDispatchToProps)(CatalogFormContainer);\n","import React, { Component } from 'react';\n\nimport CatalogHeader from '../catalog-header';\n\n\nimport CatalogActionsContainer from '../../containers/catalog-actions-container';\nimport CatalogGridContainer from '../../containers/catalog-grid-container';\nimport CatalogFormContainer from '../../containers/catalog-form-container';\n\nclass Catalog extends Component {\n  state = {\n    listMode: false\n  };\n\n  handleGridModeSelect = () => {\n    const { listMode } = this.state;\n\n    if (!listMode) return;\n\n    this.setState({\n      listMode: false\n    });\n  }\n\n  handleListModeSelect = () => {\n    const { listMode } = this.state;\n\n    if (listMode) return;\n\n    this.setState({\n      listMode: true\n    });\n  }\n\n  render() {\n    const { listMode } = this.state;\n\n    return (\n      <div className=\"catalog\">\n        <CatalogActionsContainer\n          className=\"catalog__actions\"\n        />\n        <CatalogHeader\n          className=\"catalog__header\"\n          listMode={listMode}\n          onListModeSelect={this.handleListModeSelect}\n          onGridModeSelect={this.handleGridModeSelect}\n        />\n        <CatalogGridContainer\n          className=\"catalog__grid\"\n          listMode={listMode}\n        />\n        <CatalogFormContainer\n          className=\"catalog__form\"\n        />\n      </div>\n    );\n  }\n}\n\nexport default Catalog;\n","export { default } from './catalog';\n\nrequire('./catalog.scss');\n","import React from 'react';\nimport Catalog from './components/catalog';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Catalog />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Provider } from 'react-redux';\nimport configureStore from './store/configureStore';\n\nimport * as serviceWorker from './serviceWorker';\n\nimport App from './App';\n\nimport './assets/styles/normalize.css';\nimport './assets/styles/index.scss';\n\nconst store = configureStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}